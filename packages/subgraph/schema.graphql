type DeliberationConfig @entity {
    id: ID! "DeliberationConfigID"
    expiryDuration: BigInt!
    snapInterval: BigInt!
    repsNum: BigInt!
    quorumScore: BigInt!
    lastUpdated: BigInt!
}

type Proposal @entity {
    id: ID! "{pid}"
    headers: [Header!] @derivedFrom(field: "proposal")
    cmds: [Command!] @derivedFrom(field: "proposal")
    # meta
    proposer: Bytes
    createdAt: BigInt
    expirationTime: BigInt
    # voting status
    reps: [Bytes!]
    votes: [Vote!] @derivedFrom(field: "proposal")
    approvedHeaderId: BigInt
    approvedCommandId: BigInt
    fullyExecuted: Boolean
    vrfRequestId: BigInt
    snapInterval: BigInt
    snappedEpoch: [BigInt!]
    snappedTimes: [BigInt!]
    topHeaders: [TopHeader!]
    topCommands: [TopCommand!]
}

type Header @entity {
    id: ID! "header-{pid}-{headerId}"
    proposal: Proposal!
    contents: HeaderContents
    cid: String!
    createdAt: BigInt!
}

type HeaderContents @entity {
    id: ID! "{ipfsCid}"
    title: String
    body: String
}

type Command @entity {
    id: ID! "command-{pid}-{commandId}"
    proposal: Proposal!
    actions: [Action!]! @derivedFrom(field: "command")
    createdAt: BigInt!
}

type Action @entity {
    id: ID! "{pid}-{commandId}-{actionIndex}"
    command: Command! # parent
    func: String!
    abiParams: Bytes!
    status: ActionStatus!
}

enum ActionStatus {
    Proposed
    Approved
    Executed
}

type TopHeader @entity {
    id: ID! "topHeader-{pid}-{epoch}-{index}"
    snappedEpoch: BigInt!
    index: BigInt! # rank-like
    header: Header!
}

type TopCommand @entity {
    id: ID! "topCommand-{pid}-{epoch}-{index}"
    snappedEpoch: BigInt!
    index: BigInt! # rank-like
    command: Command!
}

type Vote @entity {
    id: ID! "{pid}-{repAddress}"
    proposal: Proposal! # parent
    rep: Bytes! # mapping-key
    rankedHeaderIds: [BigInt!]
    rankedCommandIds: [BigInt!]
}

type Text @entity {
    id: ID! "{textId}"
    contents: TextContents
    cid: String!
}

type TextContents @entity {
    id: ID! "{ipfsCid}"
    title: String
    body: String
}

type Member @entity {
    id: ID! "{memberId}"
    addr: Bytes!
    info: MemberInfo
    cid: String
}

type MemberInfo @entity {
    id: ID! "{ipfsCid}"
    name: String
    image: String
    bio: String
}
